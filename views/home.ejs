<% include partials/header %>
<div class="wrapper">
  <% include partials/navigation %>
  <main class="main">
    <div class="container">
      <% include partials/calculator %>
      <% include partials/weather %>
    </div>
  </main>

</div>
<div id="graph" class="graph-section">
  <div id="resChart" style="height: 500px;margin-bottom: 40px;"></div>
  <div id="tempChart" style="height: 400px;margin-bottom: 40px"></div>
  <div id="logChart" style="height: 400px;margin-bottom: 40px"></div>
</div>
<% include partials/footer %>
<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<script src="./js/weather.js"></script>
<script>
  var res_cor_data = [];
  var res_raw_data = [];
  var temp_data = [];
  var time_labels = [];
  var day_labels = [];
  var labels = [];
  var t1 = !<%=t1%>;
  var t2 = !<%=t2%>;
  var t3 = !<%=t3%>;
  var t4 = !<%=t4%>;
  var temp1 = [];
  var temp2 = [];
  var temp3 = [];
  var temp4 = [];
  var yLn = [];
  var xKt1 = [];
  var xKt2 = [];
  var xKt3 = [];
  var xKt4 = [];
  var realtemp = [];
  var tidalheight = [];
  // Getting data array on integers from backend
  <% for (var d of res_cor_data) { %>
  res_cor_data.push(<%=d%>);
  <% } %>
  <% for (var d of res_raw_data) { %>
  res_raw_data.push(<%=d%>);
  <% } %>
  <% for (var d of temp_data) { %>
  temp_data.push(<%=d%>);
  <% } %>
  <% for (var d of temp1) { %>
  temp1.push(<%=d%>);
  <% } %>
  <% for (var d of temp2) { %>
  temp2.push(<%=d%>);
  <% } %>
  <% for (var d of temp3) { %>
  temp3.push(<%=d%>);
  <% } %>
  <% for (var d of temp4) { %>
  temp4.push(<%=d%>);
  <% } %>
  <% for (var d of yLn) { %>
  yLn.push(<%=d%>);
  <% } %>
  <% for (var d of xKt1) { %>
  xKt1.push(<%=d%>);
  <% } %>
  <% for (var d of xKt2) { %>
  xKt2.push(<%=d%>);
  <% } %>
  <% for (var d of xKt3) { %>
  xKt3.push(<%=d%>);
  <% } %>
  <% for (var d of xKt4) { %>
  xKt4.push(<%=d%>);
  <% } %>
  <% for (var d of realtemp) { %>
  realtemp.push(<%=d%>);
  <% } %>
  <% for (var d of tidalheight) { %>
  tidalheight.push(<%=d%>);
  <% } %>
  var logRaw = [];
  for (var d of res_raw_data) {
    logRaw.push(Math.log(d));
  }
  // Getting labels array of string from backend
  time_labels = '<%=time_labels%>';
  time_labels = time_labels.split(",");
  day_labels = '<%=day_labels%>';
  day_labels = day_labels.split(",");
  realdate = '<%=realdate%>';
  realdate = realdate.split(",");
  tidaldate = '<%=tidaldate%>';
  tidaldate = tidaldate.split(",");
  for (i = 0; i < day_labels.length; i++) {
    labels.push(day_labels[i] + " " + time_labels[i]);
  }
  console.log("Real tidal");
  console.log(tidaldate);
  console.log("Real tidal");
  console.log(tidalheight);
  // console.log("Corrected data");
  // console.log(res_cor_data);
  // console.log("Raw data");
  // console.log(res_raw_data);
  // console.log("Time");
  // console.log(time_labels);
  // console.log("Days");
  // console.log(day_labels);
  // console.log("Temp data");
  // console.log(temp_data);
  // console.log(temp1);
  // console.log(temp2);
  // console.log(temp3);
  // console.log("yln");
  // console.log(yLn);
  // console.log("logs");
  // console.log(xKt1);
  // console.log("Logging finished");
  // 1st chart
  var corData = {
    x: labels,
    y: res_cor_data,
    name: "Corrected",
    type: "scatter"
  };
  var rawData = {
    x: labels,
    y: res_raw_data,
    name: "Raw",
    type: "scatter"
  };
  var data = [
    corData,
    rawData
  ];
  var layout = {
    title: 'Resistivity',
    font: {
      family: "'Nunito', sans-serif",
      size: 17,
      color: '#004c8e'
    },
    xaxis: {
    'rangeslider': {
    },
      color: '#333',
      tickfont: {
        size: 14,
        color: '#7f7f7f'
      }
    },
    yaxis: {
      fixedrange: true,
      color: '#333',
      tickfont: {
        size: 14,
        color: '#7f7f7f'
      }
    },
    margin: {
      b: 0,
      t: 50,
      pad: 0
    }
  };
  Plotly.plot('resChart', data, layout, {
    displayModeBar: false
  });


  // 2nd chart
  var t1Data = {
    x: labels,
    y: temp1,
    name: "Thermistor 1",
    visible: (t1) ? "legendonly" : true,
    type: "scatter"
  }
  var t2Data = {
    x: labels,
    y: temp2,
    name: "Thermistor 2",
    visible: (t2) ? "legendonly" : true,
    type: "scatter"
  }
  var t3Data = {
    x: labels,
    y: temp3,
    name: "Thermistor 3",
    visible: (t3) ? "legendonly" : true,
    type: "scatter"
  }
  var t4Data = {
    x: labels,
    y: temp4,
    name: "Thermistor 4",
    visible: (t4) ? "legendonly" : true,
    type: "scatter"
  }
  var realData = {
    x: realdate,
    y: realtemp,
    name: "Real temp.",
    visible: true,
    type: "scatter"
  }
  var tidalData = {
    x: tidaldate,
    y: tidalheight,
    name: "Tidal",
    visible: true,
    type: "scatter"
  }
  var data = [
    t1Data,
    t2Data,
    t3Data,
    t4Data,
    realData,
    tidalData,
  ];
  var layout = {
    title: 'Temperature (degC)',
    font: {
      family: "'Nunito', sans-serif",
      size: 17,
      color: '#004c8e'
    },
    xaxis: {
      rangeslider: {
      },
      color: '#333',
      tickfont: {
        size: 14,
        color: '#7f7f7f'
      }

    },
    yaxis: {
      fixedrange: true,
      color: '#333',
      tickfont: {
        size: 14,
        color: '#7f7f7f'
      }

    },
    margin: {
      b: 0,
      t: 50,
      pad: 0
    }
  };
  Plotly.plot('tempChart', data, layout, {
    displayModeBar: false
  });
  // 3rd chart
  var trace1 = {
    x: xKt1,
    y: yLn,
    name: "ln1",
    visible: (t1) ? "legendonly" : true,
    type: "scatter",
    mode: "markers"
  }
  var trace2 = {
    x: xKt2,
    y: yLn,
    name: "ln2",
    visible: (t2) ? "legendonly" : true,
    type: "scatter",
    mode: "markers"
  }
  var trace3 = {
    x: xKt3,
    y: yLn,
    name: "ln3",
    visible: (t3) ? "legendonly" : true,
    type: "scatter",
    mode: "markers"
  }
  var trace4 = {
    x: xKt4,
    y: yLn,
    name: "ln4",
    visible: (t4) ? "legendonly" : true,
    type: "scatter",
    mode: "markers"
  }
  var data = [
    trace1,
    trace2,
    trace3,
    trace4
  ];
  var layout = {
    title: 'Log Graph',
    font: {
      family: "'Nunito', sans-serif",
      size: 17,
      color: '#004c8e'
    },
    yaxis: {
      fixedrange: true,
      color: '#333',
      tickfont: {
        size: 14,
        color: '#7f7f7f'
      }

    },
    xaxis: {
      //rangeselector: selectorOptions,
      color: '#333',
      tickfont: {
        size: 14,
        color: '#7f7f7f'
      }

    },
    margin: {
      b: 100,
      t: 50,
      pad: 0
    }
  };
  Plotly.newPlot('logChart', data, layout, {
    displayModeBar: false
  });
  // Activation energy
  document.getElementById("s1").innerHTML = "Activation Energy 1: " + Math.round(<%=s1%> * 100) / 100 + " kJ/Mole";
  document.getElementById("s2").innerHTML = "Activation Energy 2: " + Math.round(<%=s2%> * 100) / 100 + " kJ/Mole";
  document.getElementById("s3").innerHTML = "Activation Energy 3: " + Math.round(<%=s3%> * 100) / 100 + " kJ/Mole";
  document.getElementById("s4").innerHTML = "Activation Energy 4: " + Math.round(<%=s4%> * 100) / 100 + " kJ/Mole";
  // Dornoch Data
  // var xmlHttp = new XMLHttpRequest();
  // xmlHttp.open("GET",
  //   "https://api.openweathermap.org/data/2.5/weather?q=Dornoch&APPID=f7eb12f351a6cc84894f63865583ae7e", true
  // ); // false for synchronous request
  // xmlHttp.send(null);
  // xmlHttp.onreadystatechange = processRequest;
  //
  // function processRequest(e) {
  //   if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
  //     var response = JSON.parse(xmlHttp.responseText);
  //     // console.log(response);
  //     document.getElementById("dornoch").innerHTML = "Dornoch temperature: " + Math.round((response.main.temp -
  //       273.15) * 100) / 100 + "&#8451";
  //   }
  // }
</script>
